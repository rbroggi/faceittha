{
  "swagger": "2.0",
  "info": {
    "title": "user.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/users": {
      "get": {
        "summary": "Lists users matching certain filtering criteria.",
        "description": "Supports pagination using the page_size and page_token fields in the request.\nListUsers returns a list of user accounts matching the specified criteria.",
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of users to return per page.\n\n0 assumes meaning of unbound page-limit.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "The offset of users already returned",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "countries",
            "description": "The countries for which the list of users must belong to.\n\nThis field is optional.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "createdAfter",
            "description": "Left time-boundary of the interval at which the user was created\n\nThis field is optional",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdBefore",
            "description": "Right time-boundary of the interval at which the user was created\n\nThis field is optional",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "summary": "Creates a new user.",
        "description": "The user ID will be generated by the server and returned in the response.",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The request message for the CreateUser method.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{id}": {
      "delete": {
        "summary": "Removes a user.",
        "operationId": "UserService_RemoveUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RemoveUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The ID of the user to remove.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "description": "if true, user data will be hard-deleted from the system, \notherwise user-data is kept for auditing purpose.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "put": {
        "summary": "Updates an existing user.",
        "description": "The ID of the user to update should be included in the user object.",
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The ID of the user.\n\nThis field should be omitted during creation since the server will generate it.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "The first name of the user."
                },
                "lastName": {
                  "type": "string",
                  "description": "The last name of the user."
                },
                "nickname": {
                  "type": "string",
                  "description": "The user's nickname."
                },
                "email": {
                  "type": "string",
                  "description": "The user's email address."
                },
                "country": {
                  "type": "string",
                  "description": "The user's country."
                }
              },
              "description": "The request message for the UpdateUser method."
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "CreateUserRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "The first name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "The last name of the user."
        },
        "nickname": {
          "type": "string",
          "description": "The user's nickname."
        },
        "password": {
          "type": "string",
          "description": "The user's password.\n\nThis field should never be returned in responses."
        },
        "email": {
          "type": "string",
          "description": "The user's email address."
        },
        "country": {
          "type": "string",
          "description": "The user's country."
        }
      },
      "description": "The request message for the CreateUser method."
    },
    "CreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User",
          "title": "user is the created user"
        }
      },
      "description": "The response message for the CreateUser method."
    },
    "ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/User"
          },
          "description": "Array of user accounts matching the filtering criteria."
        }
      },
      "description": "ListUsersResponse is the response message for the ListUsers method."
    },
    "RemoveUserResponse": {
      "type": "object",
      "description": "The response message for the RemoveUser method."
    },
    "UpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User",
          "description": "The updated user data.\n\nThe ID of the user to update should be included in this object."
        }
      },
      "description": "The response message for the UpdateUser method."
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the user.\n\nThis field should be omitted during creation since the server will generate it."
        },
        "firstName": {
          "type": "string",
          "description": "The first name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "The last name of the user."
        },
        "nickname": {
          "type": "string",
          "description": "The user's nickname."
        },
        "email": {
          "type": "string",
          "description": "The user's email address."
        },
        "country": {
          "type": "string",
          "description": "The user's country."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the user was created."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the user was last updated."
        }
      },
      "description": "A user object."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
